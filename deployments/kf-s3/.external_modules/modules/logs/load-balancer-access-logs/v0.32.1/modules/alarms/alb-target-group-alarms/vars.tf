# ---------------------------------------------------------------------------------------------------------------------
# MODULE PARAMETERS
# These variables are expected to be passed in by the operator when calling this terraform module.
# ---------------------------------------------------------------------------------------------------------------------

variable "alarm_sns_topic_arns" {
  description = "A list of SNS topic ARNs to notify when the ELB alarms change to ALARM, OK, or INSUFFICIENT_DATA state"
  type        = list(string)
}

variable "alb_arn" {
  description = "The Amazon Resource Name (ARN) of the ALB"
  type        = string
}

variable "alb_name" {
  description = "The name of the ALB"
  type        = string
}

variable "target_group_name" {
  description = "The name of the Target Group"
  type        = string
}

variable "target_group_arn" {
  description = "The Amazon Resource Name (ARN) of the Target Group"
  type        = string
}

# ---------------------------------------------------------------------------------------------------------------------
# CLOUDWATCH ALARM DEFAULTS
# Each CloudWatch Alarm defines the following properties:
# ---------------------------------------------------------------------------------------------------------------------

# HealthyHostCount - Low Count

variable "tg_low_healthy_host_count_threshold" {
  description = "If the number of healthy targets in the Target Group goes below this threshold, an alarm will be triggered. Enter 0 to disable this alarm."
  type        = number
  default     = 0
}

variable "tg_low_healthy_host_count_evaluation_periods" {
  description = "The number of periods after which the CloudWatch Metric statistic is compared to the specified threshold before an alarm is triggered."
  type        = number
  default     = 1
}

variable "tg_low_healthy_host_count_period" {
  description = "The period, in seconds, over which the CloudWatch Metric statistic is compared to the specified threshold."
  type        = number
  default     = 60
}

variable "tg_low_healthy_host_count_treat_missing_data" {
  description = "Sets how this alarm should handle entering the INSUFFICIENT_DATA state. Based on https://goo.gl/cxzXOV. Must be one of: 'missing', 'ignore', 'breaching' or 'notBreaching'."
  type        = string
  default     = "missing"
}

variable "tg_low_healthy_host_count_datapoints_to_alarm" {
  description = "The number of datapoints in CloudWatch Metric statistic, which triggers the alarm. Setting this as null (the default) will make it equal to the evaluation period"
  type        = number
  default     = null
}

# HTTPCode_Target_4XX_Count - High Count

variable "tg_high_http_code_target_4xx_count_threshold" {
  description = "If the number of HTTP 4XX response codes generated by the targets in the Target Group exceeds this threshold, an alarm will be triggered. This number does not include any response codes generated by the ALB. Enter 0 to disable this alarm."
  type        = number
  default     = 10
}

variable "tg_high_http_code_target_4xx_count_evaluation_periods" {
  description = "The number of periods after which the CloudWatch Metric statistic is compared to the specified threshold before an alarm is triggered."
  type        = number
  default     = 1
}

variable "tg_high_http_code_target_4xx_count_period" {
  description = "The period, in seconds, over which the CloudWatch Metric statistic is compared to the specified threshold."
  type        = number
  default     = 60
}

variable "tg_high_http_code_target_4xx_count_treat_missing_data" {
  description = "Sets how this alarm should handle entering the INSUFFICIENT_DATA state. Based on https://goo.gl/cxzXOV. Must be one of: 'missing', 'ignore', 'breaching' or 'notBreaching'."
  type        = string
  default     = "missing"
}

variable "tg_high_http_code_target_4xx_count_datapoints_to_alarm" {
  description = "The number of datapoints in CloudWatch Metric statistic, which triggers the alarm. Setting this as null (the default) will make it equal to the evaluation period"
  type        = number
  default     = null
}

# HTTPCode_Target_5XX_Count - High Count

variable "tg_high_http_code_target_5xx_count_threshold" {
  description = "If the number of HTTP 5XX response codes generated by the targets in the Target Group exceeds this threshold, an alarm will be triggered. This number does not include any response codes generated by the ALB. Enter 0 to disable this alarm."
  type        = number
  default     = 10
}

variable "tg_high_http_code_target_5xx_count_evaluation_periods" {
  description = "The number of periods after which the CloudWatch Metric statistic is compared to the specified threshold before an alarm is triggered."
  type        = number
  default     = 1
}

variable "tg_high_http_code_target_5xx_count_period" {
  description = "The period, in seconds, over which the CloudWatch Metric statistic is compared to the specified threshold."
  type        = number
  default     = 60
}

variable "tg_high_http_code_target_5xx_count_treat_missing_data" {
  description = "Sets how this alarm should handle entering the INSUFFICIENT_DATA state. Based on https://goo.gl/cxzXOV. Must be one of: 'missing', 'ignore', 'breaching' or 'notBreaching'."
  type        = string
  default     = "missing"
}

variable "tg_high_http_code_target_5xx_count_datapoints_to_alarm" {
  description = "The number of datapoints in CloudWatch Metric statistic, which triggers the alarm. Setting this as null (the default) will make it equal to the evaluation period"
  type        = number
  default     = null
}

# RequestCount - High Count

variable "tg_high_request_count_threshold" {
  description = "If the number of requests received by the Target Group goes above this threshold, an alarm will be triggered. Enter 0 to disable this alarm."
  type        = number
  default     = 120000
}

variable "tg_high_request_count_evaluation_periods" {
  description = "The number of periods after which the CloudWatch Metric statistic is compared to the specified threshold before an alarm is triggered."
  type        = number
  default     = 1
}

variable "tg_high_request_count_period" {
  description = "The period, in seconds, over which the CloudWatch Metric statistic is compared to the specified threshold."
  type        = number
  default     = 60
}

variable "tg_high_request_count_treat_missing_data" {
  description = "Sets how this alarm should handle entering the INSUFFICIENT_DATA state. Based on https://goo.gl/cxzXOV. Must be one of: 'missing', 'ignore', 'breaching' or 'notBreaching'."
  type        = string
  default     = "missing"
}

variable "tg_high_request_count_datapoints_to_alarm" {
  description = "The number of datapoints in CloudWatch Metric statistic, which triggers the alarm. Setting this as null (the default) will make it equal to the evaluation period"
  type        = number
  default     = null
}

# RequestCount - Low Count

variable "tg_low_request_count_threshold" {
  description = "If the number of requests received by the Target Group goes above this threshold, an alarm will be triggered. Enter 0 to disable this alarm."
  type        = number
  default     = 0
}

variable "tg_low_request_count_evaluation_periods" {
  description = "The number of periods after which the CloudWatch Metric statistic is compared to the specified threshold before an alarm is triggered."
  type        = number
  default     = 1
}

variable "tg_low_request_count_period" {
  description = "The period, in seconds, over which the CloudWatch Metric statistic is compared to the specified threshold."
  type        = number
  default     = 60
}

variable "tg_low_request_count_treat_missing_data" {
  description = "Sets how this alarm should handle entering the INSUFFICIENT_DATA state. Based on https://goo.gl/cxzXOV. Must be one of: 'missing', 'ignore', 'breaching' or 'notBreaching'."
  type        = string
  default     = "missing"
}

variable "tg_low_request_count_datapoints_to_alarm" {
  description = "The number of datapoints in CloudWatch Metric statistic, which triggers the alarm. Setting this as null (the default) will make it equal to the evaluation period"
  type        = number
  default     = null
}

# TargetConnectionErrorCount - High Count

variable "tg_high_target_connection_error_count_threshold" {
  description = "If the number of connections that were not successfully established between the load balancer and the Target Group goes above this threshold, an alarm will be triggered. Enter 0 to disable this alarm."
  type        = number
  default     = 10
}

variable "tg_high_target_connection_error_count_evaluation_periods" {
  description = "The number of periods after which the CloudWatch Metric statistic is compared to the specified threshold before an alarm is triggered."
  type        = number
  default     = 1
}

variable "tg_high_target_connection_error_count_period" {
  description = "The period, in seconds, over which the CloudWatch Metric statistic is compared to the specified threshold."
  type        = number
  default     = 60
}

variable "tg_high_target_connection_error_count_treat_missing_data" {
  description = "Sets how this alarm should handle entering the INSUFFICIENT_DATA state. Based on https://goo.gl/cxzXOV. Must be one of: 'missing', 'ignore', 'breaching' or 'notBreaching'."
  type        = string
  default     = "missing"
}

variable "tg_high_target_connection_error_count_datapoints_to_alarm" {
  description = "The number of datapoints in CloudWatch Metric statistic, which triggers the alarm. Setting this as null (the default) will make it equal to the evaluation period"
  type        = number
  default     = null
}

# TargetResponseTime - High Count

variable "tg_high_target_response_time_threshold" {
  description = "If the time elapsed, in seconds, after the request leaves the load balancer until a response from the target is received exceeds this threshold, an alarm will be triggered. This is equivalent to the target_processing_time field in the ALB access logs. Enter 0 to disable this alarm."
  type        = number
  default     = 5
}

variable "tg_high_target_response_time_evaluation_periods" {
  description = "The number of periods after which the CloudWatch Metric statistic is compared to the specified threshold before an alarm is triggered."
  type        = number
  default     = 1
}

variable "tg_high_target_response_time_period" {
  description = "The period, in seconds, over which the CloudWatch Metric statistic is compared to the specified threshold."
  type        = number
  default     = 60
}

variable "tg_high_target_response_time_treat_missing_data" {
  description = "Sets how this alarm should handle entering the INSUFFICIENT_DATA state. Based on https://goo.gl/cxzXOV. Must be one of: 'missing', 'ignore', 'breaching' or 'notBreaching'."
  type        = string
  default     = "missing"
}

variable "tg_high_target_response_time_datapoints_to_alarm" {
  description = "The number of datapoints in CloudWatch Metric statistic, which triggers the alarm. Setting this as null (the default) will make it equal to the evaluation period"
  type        = number
  default     = null
}

variable "tags" {
  description = "A map of tags to apply to the metric alarm. The key is the tag name and the value is the tag value."
  type        = map(string)
  default     = {}
}

variable "create_resources" {
  description = "Set to false to have this module skip creating resources. This weird parameter exists solely because Terraform does not support conditional modules. Therefore, this is a hack to allow you to conditionally decide if this module should create anything or not."
  type        = bool
  default     = true
}